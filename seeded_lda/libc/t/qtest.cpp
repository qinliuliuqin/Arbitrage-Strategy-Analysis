#include <stdio.h>
#include <iostream>

#include "utils/utils.cpp"
#include "utils/Pair.cpp"

template<class T>
inline void swap(T& v1,T& v2)
{
  T temp=v2;
  v2=v1;
  v1=temp;
}

template<class T>
void quicksort(T *array,int hi,int lo=0)
{
  while(hi>lo)
  {
    int i=lo;
    int j=hi;
    do
    {
      while(array[i]<array[lo]&&i<j)
         i++;
      while(array[--j]>array[lo])
                 ;
      if(i<j)
         swap(array[i],array[j]);
    }while(i<j);
    swap(array[lo],array[j]);

    if(j-lo>hi-(j+1)) {
       quicksort(array,j-1,lo);
       lo=j+1;
    }else{
       quicksort(array,hi,j+1);
       hi=j-1;
    }
  }
}

int main(int argc, char *argv[]){

	int a[] = {430,225,92,75,292,334,197,229,243,170,140,138,467,464,471,128,418,435,338,62,335,479,63,431,45,294,260,482,137,98,245,67,413,160,6,362,265,500,139,391,178,159,269,394,281,250,192,400,392,475,306,319,457,384,25,169,368,43,364,480,248,120,77,163,387,255,371,235,249,360,395,272,473,186,100,370,388,452,336,101,68,355,456,70,340,424,59,427,219,50,481,263,487,401,264,261,102,177,262,271,293,122,295,366,267,106,318,173,22,85,188,328,60,31,207,95,117,499,49,74,312,359,118,231,142,158,339,321,478,342,357,345,238,2,35,326,93,385,184,288,324,13,426,23,276,32,153,44,57,439,232,455,494,200,112,414,460,423,405,443,168,196,266,7,451,296,226,239,425,277,135,233,352,174,367,459,46,329,172,108,145,286,445,462,449,179,432,486,104,468,87,20,422,242,301,136,72,147,463,419,162,10,149,343,203,237,305,483,417,446,69,132,311,18,287,52,379,382,361,317,55,399,182,472,39,493,365,332,230,201,144,89,228,205,470,121,26,156,103,434,152,408,353,86,53,474,409,386,246,12,442,126,356,129,30,220,133,454,96,307,24,222,283,187,47,310,259,309,190,444,81,78,114,495,469,304,436,202,146,290,461,485,252,206,274,36,198,76,209,110,171,183,82,109,8,88,127,389,189,90,465,258,279,21,9,450,447,254,477,97,275,176,241,107,236,268,438,5,166,4,208,291,99,216,397,280,350,299,71,247,180,211,234,285,383,14,224,111,411,42,289,497,116,28,325,491,165,300,489,270,412,358,193,33,282,199,123,84,344,40,415,257,375,315,381,11,175,390,376,61,119,251,29,227,320,38,369,56,440,448,41,94,27,476,406,441,378,151,498,244,51,217,429,215,48,333,437,433,218,223,428,210,372,125,396,484,161,240,314,278,83,148,363,331,154,164,65,420,404,316,393,115,374,298,303,54,488,256,58,194,113,284,308,34,143,155,19,354,346,150,204,327,141,79,91,195,490,380,313,16,337,134,492,377,130,105,403,124,341,212,214,64,323,351,402,213,181,191,73,349,273,221,17,322,1,66,348,416,167,253,15,398,330,80,373,410,496,407,37,3,453,131,458,185,347,421,297,157,302,466,501};
	vector<int> list;
	for(int i=0;i<100;i++)
		list.push_back(a[i]);
	
	utils<int> u;

	//printf("Median : %d\n", u.median(list));
	u.QSort(list);
	for(int i=0;i<list.size();i++){
		printf("%d ", list[i]);
		if(list[i] < list[i-1]){
			printf("***");
		}
	}
	printf("\n");

	printf("Median : %d\n", list[list.size()/2]);

	exit(1234);
	/*
	int b[] = {32,23,20,30,21,10,27,16,11,25,37,17,28,31,29,15,22,12,26,33,14,34,13,19,9,35,18,36};
	utils<Pair<int,double> > up;
	vector<Pair<int,double> > blist;
	vector<double> dlist;
	double d[] = {1.545048, 0.934898, 1.674067, 0.934898, 1.226938, 1.322104, 1.674067, 1.322104, 2.250924};
	utils<double> ud;
	for(int i=0;i<9;i++){
		blist.push_back(Pair<int,double>(i,d[i]));
		dlist.push_back(d[i]);
	}
	ud.QSort(dlist);
	for(int i=0;i<dlist.size();i++)
		printf("%f ", dlist[i]);
	printf("\n -- Now sorting pairs ... \n");
	up.QSort(blist);
	for(int i=0;i<blist.size();i++)
		printf("%d %f*", blist[i].First, blist[i].Second);
	printf("\n");
	*/
}
